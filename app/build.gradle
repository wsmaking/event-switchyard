/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.12/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    implementation 'org.apache.kafka:kafka-clients:3.5.1'
    implementation 'org.hdrhistogram:HdrHistogram:2.1.12'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'

    implementation 'org.slf4j:slf4j-api:1.7.36'
    runtimeOnly 'org.slf4j:slf4j-simple:2.0.13'

    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    //mainClass = 'org.example.App'

    mainClass.set(findProperty('mainClass')
        ?: "org.example.App"
    )
}

jar {
    manifest {
        attributes(
            'Main-Class': application.mainClass.get()
        )
    }
    // runtimeClasspath の JAR をすべて展開して一つにまとめる
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
