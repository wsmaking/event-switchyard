plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'org.jetbrains.kotlin.jvm' version '2.0.20'
}

repositories { mavenCentral() }

java {
    toolchain { languageVersion = JavaLanguageVersion.of(21) }
}
kotlin {
    jvmToolchain(21)
}

dependencies {
    // --- Test ---
    testImplementation libs.junit.jupiter
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // --- Kotlin (BOMでバージョンを揃える) ---
    implementation platform("org.jetbrains.kotlin:kotlin-bom:2.0.20")
    implementation 'org.jetbrains.kotlin:kotlin-stdlib'

    // --- JSON: KotlinフレンドリーなJacksonセット ---
    implementation platform('com.fasterxml.jackson:jackson-bom:2.17.1')
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'com.fasterxml.jackson.module:jackson-module-afterburner'

    implementation libs.guava
    implementation 'org.apache.kafka:kafka-clients:3.5.1'
    implementation 'org.hdrhistogram:HdrHistogram:2.1.12'
    implementation 'ch.qos.logback:logback-classic:1.5.6'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
    implementation 'io.etcd:jetcd-core:0.7.7'
    implementation 'io.etcd:jetcd-common:0.7.7'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = '21'
    }
}

tasks.named('shadowJar') {
    archiveBaseName.set('app')
    archiveClassifier.set('all')
    mergeServiceFiles()
}

application {
    mainClass.set((findProperty('mainClass') ?: "app.MainKt") as String)
}

jar {
    manifest { attributes('Main-Class': application.mainClass.get()) }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named('test') { useJUnitPlatform() }
